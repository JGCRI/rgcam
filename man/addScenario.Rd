% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/importgcam.R
\name{addScenario}
\alias{addScenario}
\title{Add a scenario from a GCAM output database to a project data set}
\usage{
addScenario(dbFile, proj, scenario = NULL, queryFile = NULL,
  clobber = FALSE, miclasspath = NULL, transformations = NULL,
  migabble = NULL)
}
\arguments{
\item{dbFile}{GCAM database to extract scenario from.}

\item{proj}{Project to add extracted results to.  Can be either a project
data structure or the name of a project data file.  The file will be created
if it doesn't already exist.}

\item{scenario}{Name of scenario to extract.  If \code{NULL}, use the last
scenario in the GCAM database.}

\item{queryFile}{XML query file to pass to the GCAM Model Interface.  If
\code{NULL}, use a default query file containing commonly used queries.}

\item{clobber}{If \code{TRUE}, overwrite any existing scenario of the same
name; otherwise, fail if \code{scenario} already exists in the data set.}

\item{miclasspath}{Java class path for the GCAM Model Interface.  If
\code{NULL}, use a bult-in default.}

\item{transformations}{Transformation functions to apply to the queries (see
details).}

\item{migabble}{Control what happens to the model interface console output.
This is passed to the stdout/stderr argument of \code{system2}.  Default is
to discard.}
}
\value{
The project dataset with the new scenario added.
}
\description{
This function will run the GCAM Model Interface to extract the query data for
a scenario in a GCAM output database.  The query data is added to a project
data file.  You can optionally specify an XML file of queries to run;
otherwise, the built-in default queries will be run.  The resulting data file
will be suitable for loading into the dashboard's user interface.  It is not
necessary, or even helpful, to load a project file before adding a scenario
to it.
}
\details{
The scenario being added to the project data set is not checked to verify
that it has the same queries as previously existing scenarios.  Having a
mismatch in the queries available between scenarios is not a problem for
looking at individual scenario results, but may cause an error when looking
at difference plots between scenarios, which presume that the query being
displayed exists in both data sets.

The date value will be clipped from the scenario name and discarded.  If a
newly-read scenario is a duplicate of one already in the file, the operation
will fail unless \code{clobber = TRUE}, in which case the old scenario will
be silently overwritten.

You may optionally specify transformations to apply to the tables returned by
the model interface.  Examples of transformations you might want to apply
include aggregating values or dropping unused columns.  Specify
transformations as a named list of function objects, where the names in the
list indicate which queries the transformations will be applied to.  Each
function should take a single argument, which will be the original table and
should return the modified table as a data frame.  Do not drop the "scenario"
column as part of one of your transformations; certain types of plots need
it.

If everything goes as expected, the new scenario will be added to the data
set and written back into the project data file.  The new data set will also
be returned from the function so that it can be used without having to reread
it.
}

