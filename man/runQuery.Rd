% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/querymi.R
\name{runQuery}
\alias{runQuery}
\alias{runQuery.localDBConn}
\alias{runQuery.remoteDBConn}
\title{Run queries via a GCAM database connection and recieve results as data.frame}
\usage{
runQuery(dbConn, query, scenarios = NULL, regions = NULL)

\method{runQuery}{localDBConn}(dbConn, query, scenarios = NULL,
  regions = NULL)

\method{runQuery}{remoteDBConn}(dbConn, query, scenarios = NULL,
  regions = NULL)
}
\arguments{
\item{dbConn}{The connection to a database which will handle running the query.}

\item{query}{A Model Interface query to run.  This is typically provided as the
XML typically found in the Main_queries.xml but could also be given for instance
as a query string that will result in XML such as:
\code{doc('../output/queries/Main_queries.xml')//*[@title='Cogeneration by sector']}}

\item{scenarios}{A character vector of scenarios to query. Passing
\code{NULL} in this argument will query the last scenario in the database.
Each value can either be the scenario name or the scenario name and date
seperated by a space.  Note the date is specified exactly as in appears in
the database.}

\item{regions}{A character vector of regions to query. \code{NULL} will
run the query over all regions.}
}
\value{
A data.frame with the results.
}
\description{
To run a query users need to supply a database connection, the query to run,
the scenarios to query, and regions to query.
}
\section{Methods (by class)}{
\itemize{
\item \code{localDBConn}: Run a query on a local GCAM database

\item \code{remoteDBConn}: Run query specialization for remote databases
}}

